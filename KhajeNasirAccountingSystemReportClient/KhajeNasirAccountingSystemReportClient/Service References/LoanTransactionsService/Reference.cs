//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KhajeNasirAccountingSystemReportClient.LoanTransactionsService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoanSelectCommandResult", Namespace="http://schemas.datacontract.org/2004/07/KhajeNasirAccountingSystemWcfServiceAppli" +
        "cation")]
    [System.SerializableAttribute()]
    public partial class LoanSelectCommandResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdminNationalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AdminPermissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankFollowUpCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonNationalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuccessfulField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdminNationalCode {
            get {
                return this.AdminNationalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AdminNationalCodeField, value) != true)) {
                    this.AdminNationalCodeField = value;
                    this.RaisePropertyChanged("AdminNationalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AdminPermission {
            get {
                return this.AdminPermissionField;
            }
            set {
                if ((this.AdminPermissionField.Equals(value) != true)) {
                    this.AdminPermissionField = value;
                    this.RaisePropertyChanged("AdminPermission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankFollowUpCode {
            get {
                return this.BankFollowUpCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BankFollowUpCodeField, value) != true)) {
                    this.BankFollowUpCodeField = value;
                    this.RaisePropertyChanged("BankFollowUpCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTime {
            get {
                return this.DateTimeField;
            }
            set {
                if ((this.DateTimeField.Equals(value) != true)) {
                    this.DateTimeField = value;
                    this.RaisePropertyChanged("DateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PersonNationalCode {
            get {
                return this.PersonNationalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonNationalCodeField, value) != true)) {
                    this.PersonNationalCodeField = value;
                    this.RaisePropertyChanged("PersonNationalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Successful {
            get {
                return this.SuccessfulField;
            }
            set {
                if ((this.SuccessfulField.Equals(value) != true)) {
                    this.SuccessfulField = value;
                    this.RaisePropertyChanged("Successful");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="View_Update1_PeopleLoan", Namespace="http://schemas.datacontract.org/2004/07/KhajeNasirAccountingSystemWcfServiceAppli" +
        "cation")]
    [System.SerializableAttribute()]
    public partial class View_Update1_PeopleLoan : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdminNationalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AdminPermissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankFollowUpCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid LoanIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NationalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuccessfulField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdminNationalCode {
            get {
                return this.AdminNationalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AdminNationalCodeField, value) != true)) {
                    this.AdminNationalCodeField = value;
                    this.RaisePropertyChanged("AdminNationalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AdminPermission {
            get {
                return this.AdminPermissionField;
            }
            set {
                if ((this.AdminPermissionField.Equals(value) != true)) {
                    this.AdminPermissionField = value;
                    this.RaisePropertyChanged("AdminPermission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankFollowUpCode {
            get {
                return this.BankFollowUpCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BankFollowUpCodeField, value) != true)) {
                    this.BankFollowUpCodeField = value;
                    this.RaisePropertyChanged("BankFollowUpCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTime {
            get {
                return this.DateTimeField;
            }
            set {
                if ((this.DateTimeField.Equals(value) != true)) {
                    this.DateTimeField = value;
                    this.RaisePropertyChanged("DateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fullname {
            get {
                return this.FullnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullnameField, value) != true)) {
                    this.FullnameField = value;
                    this.RaisePropertyChanged("Fullname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid LoanId {
            get {
                return this.LoanIdField;
            }
            set {
                if ((this.LoanIdField.Equals(value) != true)) {
                    this.LoanIdField = value;
                    this.RaisePropertyChanged("LoanId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NationalCode {
            get {
                return this.NationalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.NationalCodeField, value) != true)) {
                    this.NationalCodeField = value;
                    this.RaisePropertyChanged("NationalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Successful {
            get {
                return this.SuccessfulField;
            }
            set {
                if ((this.SuccessfulField.Equals(value) != true)) {
                    this.SuccessfulField = value;
                    this.RaisePropertyChanged("Successful");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LoanTransactionsService.ILoanTransactionsService")]
    public interface ILoanTransactionsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoanTransactionsService/UnPermittedLoanTransactions", ReplyAction="http://tempuri.org/ILoanTransactionsService/UnPermittedLoanTransactionsResponse")]
        KhajeNasirAccountingSystemReportClient.LoanTransactionsService.LoanSelectCommandResult[] UnPermittedLoanTransactions(string NationalCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoanTransactionsService/UnPermittedLoanTransactions", ReplyAction="http://tempuri.org/ILoanTransactionsService/UnPermittedLoanTransactionsResponse")]
        System.Threading.Tasks.Task<KhajeNasirAccountingSystemReportClient.LoanTransactionsService.LoanSelectCommandResult[]> UnPermittedLoanTransactionsAsync(string NationalCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoanTransactionsService/PermittedLoanTransactions", ReplyAction="http://tempuri.org/ILoanTransactionsService/PermittedLoanTransactionsResponse")]
        KhajeNasirAccountingSystemReportClient.LoanTransactionsService.LoanSelectCommandResult[] PermittedLoanTransactions(string NationalCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoanTransactionsService/PermittedLoanTransactions", ReplyAction="http://tempuri.org/ILoanTransactionsService/PermittedLoanTransactionsResponse")]
        System.Threading.Tasks.Task<KhajeNasirAccountingSystemReportClient.LoanTransactionsService.LoanSelectCommandResult[]> PermittedLoanTransactionsAsync(string NationalCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoanTransactionsService/GetLoanTransactions", ReplyAction="http://tempuri.org/ILoanTransactionsService/GetLoanTransactionsResponse")]
        KhajeNasirAccountingSystemReportClient.LoanTransactionsService.LoanSelectCommandResult[] GetLoanTransactions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoanTransactionsService/GetLoanTransactions", ReplyAction="http://tempuri.org/ILoanTransactionsService/GetLoanTransactionsResponse")]
        System.Threading.Tasks.Task<KhajeNasirAccountingSystemReportClient.LoanTransactionsService.LoanSelectCommandResult[]> GetLoanTransactionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoanTransactionsService/GetPeopleLoanTransactions", ReplyAction="http://tempuri.org/ILoanTransactionsService/GetPeopleLoanTransactionsResponse")]
        KhajeNasirAccountingSystemReportClient.LoanTransactionsService.View_Update1_PeopleLoan[] GetPeopleLoanTransactions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoanTransactionsService/GetPeopleLoanTransactions", ReplyAction="http://tempuri.org/ILoanTransactionsService/GetPeopleLoanTransactionsResponse")]
        System.Threading.Tasks.Task<KhajeNasirAccountingSystemReportClient.LoanTransactionsService.View_Update1_PeopleLoan[]> GetPeopleLoanTransactionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoanTransactionsService/InsertLoanTransactions", ReplyAction="http://tempuri.org/ILoanTransactionsService/InsertLoanTransactionsResponse")]
        void InsertLoanTransactions(System.Guid Id, System.DateTime DateTime, decimal Amount, string BankFollowUpCode, bool AdminPermission, string AdminNationalCode, string PersonNationalCode, bool Successful);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoanTransactionsService/InsertLoanTransactions", ReplyAction="http://tempuri.org/ILoanTransactionsService/InsertLoanTransactionsResponse")]
        System.Threading.Tasks.Task InsertLoanTransactionsAsync(System.Guid Id, System.DateTime DateTime, decimal Amount, string BankFollowUpCode, bool AdminPermission, string AdminNationalCode, string PersonNationalCode, bool Successful);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoanTransactionsService/UpdateLoanTransactions", ReplyAction="http://tempuri.org/ILoanTransactionsService/UpdateLoanTransactionsResponse")]
        void UpdateLoanTransactions(System.Guid Id, System.DateTime DateTime, decimal Amount, string BankFollowUpCode, bool AdminPermission, string AdminNationalCode, string PersonNationalCode, bool Successful);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoanTransactionsService/UpdateLoanTransactions", ReplyAction="http://tempuri.org/ILoanTransactionsService/UpdateLoanTransactionsResponse")]
        System.Threading.Tasks.Task UpdateLoanTransactionsAsync(System.Guid Id, System.DateTime DateTime, decimal Amount, string BankFollowUpCode, bool AdminPermission, string AdminNationalCode, string PersonNationalCode, bool Successful);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoanTransactionsService/DeleteLoanTransactions", ReplyAction="http://tempuri.org/ILoanTransactionsService/DeleteLoanTransactionsResponse")]
        void DeleteLoanTransactions(System.Guid Original_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoanTransactionsService/DeleteLoanTransactions", ReplyAction="http://tempuri.org/ILoanTransactionsService/DeleteLoanTransactionsResponse")]
        System.Threading.Tasks.Task DeleteLoanTransactionsAsync(System.Guid Original_Id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILoanTransactionsServiceChannel : KhajeNasirAccountingSystemReportClient.LoanTransactionsService.ILoanTransactionsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoanTransactionsServiceClient : System.ServiceModel.ClientBase<KhajeNasirAccountingSystemReportClient.LoanTransactionsService.ILoanTransactionsService>, KhajeNasirAccountingSystemReportClient.LoanTransactionsService.ILoanTransactionsService {
        
        public LoanTransactionsServiceClient() {
        }
        
        public LoanTransactionsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LoanTransactionsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoanTransactionsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoanTransactionsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public KhajeNasirAccountingSystemReportClient.LoanTransactionsService.LoanSelectCommandResult[] UnPermittedLoanTransactions(string NationalCode) {
            return base.Channel.UnPermittedLoanTransactions(NationalCode);
        }
        
        public System.Threading.Tasks.Task<KhajeNasirAccountingSystemReportClient.LoanTransactionsService.LoanSelectCommandResult[]> UnPermittedLoanTransactionsAsync(string NationalCode) {
            return base.Channel.UnPermittedLoanTransactionsAsync(NationalCode);
        }
        
        public KhajeNasirAccountingSystemReportClient.LoanTransactionsService.LoanSelectCommandResult[] PermittedLoanTransactions(string NationalCode) {
            return base.Channel.PermittedLoanTransactions(NationalCode);
        }
        
        public System.Threading.Tasks.Task<KhajeNasirAccountingSystemReportClient.LoanTransactionsService.LoanSelectCommandResult[]> PermittedLoanTransactionsAsync(string NationalCode) {
            return base.Channel.PermittedLoanTransactionsAsync(NationalCode);
        }
        
        public KhajeNasirAccountingSystemReportClient.LoanTransactionsService.LoanSelectCommandResult[] GetLoanTransactions() {
            return base.Channel.GetLoanTransactions();
        }
        
        public System.Threading.Tasks.Task<KhajeNasirAccountingSystemReportClient.LoanTransactionsService.LoanSelectCommandResult[]> GetLoanTransactionsAsync() {
            return base.Channel.GetLoanTransactionsAsync();
        }
        
        public KhajeNasirAccountingSystemReportClient.LoanTransactionsService.View_Update1_PeopleLoan[] GetPeopleLoanTransactions() {
            return base.Channel.GetPeopleLoanTransactions();
        }
        
        public System.Threading.Tasks.Task<KhajeNasirAccountingSystemReportClient.LoanTransactionsService.View_Update1_PeopleLoan[]> GetPeopleLoanTransactionsAsync() {
            return base.Channel.GetPeopleLoanTransactionsAsync();
        }
        
        public void InsertLoanTransactions(System.Guid Id, System.DateTime DateTime, decimal Amount, string BankFollowUpCode, bool AdminPermission, string AdminNationalCode, string PersonNationalCode, bool Successful) {
            base.Channel.InsertLoanTransactions(Id, DateTime, Amount, BankFollowUpCode, AdminPermission, AdminNationalCode, PersonNationalCode, Successful);
        }
        
        public System.Threading.Tasks.Task InsertLoanTransactionsAsync(System.Guid Id, System.DateTime DateTime, decimal Amount, string BankFollowUpCode, bool AdminPermission, string AdminNationalCode, string PersonNationalCode, bool Successful) {
            return base.Channel.InsertLoanTransactionsAsync(Id, DateTime, Amount, BankFollowUpCode, AdminPermission, AdminNationalCode, PersonNationalCode, Successful);
        }
        
        public void UpdateLoanTransactions(System.Guid Id, System.DateTime DateTime, decimal Amount, string BankFollowUpCode, bool AdminPermission, string AdminNationalCode, string PersonNationalCode, bool Successful) {
            base.Channel.UpdateLoanTransactions(Id, DateTime, Amount, BankFollowUpCode, AdminPermission, AdminNationalCode, PersonNationalCode, Successful);
        }
        
        public System.Threading.Tasks.Task UpdateLoanTransactionsAsync(System.Guid Id, System.DateTime DateTime, decimal Amount, string BankFollowUpCode, bool AdminPermission, string AdminNationalCode, string PersonNationalCode, bool Successful) {
            return base.Channel.UpdateLoanTransactionsAsync(Id, DateTime, Amount, BankFollowUpCode, AdminPermission, AdminNationalCode, PersonNationalCode, Successful);
        }
        
        public void DeleteLoanTransactions(System.Guid Original_Id) {
            base.Channel.DeleteLoanTransactions(Original_Id);
        }
        
        public System.Threading.Tasks.Task DeleteLoanTransactionsAsync(System.Guid Original_Id) {
            return base.Channel.DeleteLoanTransactionsAsync(Original_Id);
        }
    }
}
