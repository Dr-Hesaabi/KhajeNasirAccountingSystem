#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KhajeNasirAccountingSystemWcfServiceApplication
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="KhajeNasirAccountingSystemDatabase")]
	public partial class DcDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCheque(Cheque instance);
    partial void UpdateCheque(Cheque instance);
    partial void DeleteCheque(Cheque instance);
    partial void InsertDepositTransaction(DepositTransaction instance);
    partial void UpdateDepositTransaction(DepositTransaction instance);
    partial void DeleteDepositTransaction(DepositTransaction instance);
    partial void InsertInstallement(Installement instance);
    partial void UpdateInstallement(Installement instance);
    partial void DeleteInstallement(Installement instance);
    partial void InsertLoanTransaction(LoanTransaction instance);
    partial void UpdateLoanTransaction(LoanTransaction instance);
    partial void DeleteLoanTransaction(LoanTransaction instance);
    partial void InsertLogSet(LogSet instance);
    partial void UpdateLogSet(LogSet instance);
    partial void DeleteLogSet(LogSet instance);
    partial void InsertPeople(People instance);
    partial void UpdatePeople(People instance);
    partial void DeletePeople(People instance);
    #endregion
		
		public DcDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["KhajeNasirAccountingSystemDatabaseConnectionString2"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DcDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DcDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DcDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DcDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Cheque> Cheques
		{
			get
			{
				return this.GetTable<Cheque>();
			}
		}
		
		public System.Data.Linq.Table<DepositTransaction> DepositTransactions
		{
			get
			{
				return this.GetTable<DepositTransaction>();
			}
		}
		
		public System.Data.Linq.Table<Installement> Installements
		{
			get
			{
				return this.GetTable<Installement>();
			}
		}
		
		public System.Data.Linq.Table<LoanTransaction> LoanTransactions
		{
			get
			{
				return this.GetTable<LoanTransaction>();
			}
		}
		
		public System.Data.Linq.Table<LogSet> LogSets
		{
			get
			{
				return this.GetTable<LogSet>();
			}
		}
		
		public System.Data.Linq.Table<People> Peoples
		{
			get
			{
				return this.GetTable<People>();
			}
		}
		
		public System.Data.Linq.Table<View_Update1_PeopleDeposit> View_Update1_PeopleDeposits
		{
			get
			{
				return this.GetTable<View_Update1_PeopleDeposit>();
			}
		}
		
		public System.Data.Linq.Table<View_Update1_PeopleLoan> View_Update1_PeopleLoans
		{
			get
			{
				return this.GetTable<View_Update1_PeopleLoan>();
			}
		}
		
		public System.Data.Linq.Table<View_Update1_PersonActive> View_Update1_PersonActives
		{
			get
			{
				return this.GetTable<View_Update1_PersonActive>();
			}
		}
		
		public System.Data.Linq.Table<View_Update1_PersonInstallement> View_Update1_PersonInstallements
		{
			get
			{
				return this.GetTable<View_Update1_PersonInstallement>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Update1_ToggleAccountActiveState")]
		public int Update1_ToggleAccountActiveState([global::System.Data.Linq.Mapping.ParameterAttribute(Name="NationalCode", DbType="NChar(10)")] string nationalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsActive", DbType="Bit")] System.Nullable<bool> isActive)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nationalCode, isActive);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ChequeDeleteCommand")]
		public int ChequeDeleteCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_Id", DbType="UniqueIdentifier")] System.Nullable<System.Guid> original_Id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), original_Id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ChequeInsertCommand")]
		public ISingleResult<ChequeInsertCommandResult> ChequeInsertCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="UniqueIdentifier")] System.Nullable<System.Guid> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Amount", DbType="Decimal(10,2)")] System.Nullable<decimal> amount, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PayTo", DbType="NVarChar(500)")] string payTo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AdminNationalCode", DbType="NChar(10)")] string adminNationalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IssuanceDateTime", DbType="DateTime")] System.Nullable<System.DateTime> issuanceDateTime)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, amount, payTo, adminNationalCode, issuanceDateTime);
			return ((ISingleResult<ChequeInsertCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ChequeSelectCommand")]
		public ISingleResult<Cheque> ChequeSelectCommand()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<Cheque>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ChequeUpdateCommand")]
		public ISingleResult<ChequeUpdateCommandResult> ChequeUpdateCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="UniqueIdentifier")] System.Nullable<System.Guid> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Amount", DbType="Decimal(10,2)")] System.Nullable<decimal> amount, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PayTo", DbType="NVarChar(500)")] string payTo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AdminNationalCode", DbType="NChar(10)")] string adminNationalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IssuanceDateTime", DbType="DateTime")] System.Nullable<System.DateTime> issuanceDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_Id", DbType="UniqueIdentifier")] System.Nullable<System.Guid> original_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="NVarChar(MAX)")] string description)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, amount, payTo, adminNationalCode, issuanceDateTime, original_Id, description);
			return ((ISingleResult<ChequeUpdateCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DepositDeleteCommand")]
		public int DepositDeleteCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_Id", DbType="UniqueIdentifier")] System.Nullable<System.Guid> original_Id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), original_Id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DepositInsertCommand")]
		public ISingleResult<DepositInsertCommandResult> DepositInsertCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="UniqueIdentifier")] System.Nullable<System.Guid> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateTime", DbType="DateTime")] System.Nullable<System.DateTime> dateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Amount", DbType="Decimal(10,2)")] System.Nullable<decimal> amount, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankFollowUpCode", DbType="NVarChar(500)")] string bankFollowUpCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AdminPermission", DbType="Bit")] System.Nullable<bool> adminPermission, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AdminNationalCode", DbType="NChar(10)")] string adminNationalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PersonNationalCode", DbType="NChar(10)")] string personNationalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Successful", DbType="Bit")] System.Nullable<bool> successful)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, dateTime, amount, bankFollowUpCode, adminPermission, adminNationalCode, personNationalCode, successful);
			return ((ISingleResult<DepositInsertCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DepositSelectCommand")]
		public ISingleResult<DepositSelectCommandResult> DepositSelectCommand()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<DepositSelectCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DepositUpdateCommand")]
		public ISingleResult<DepositUpdateCommandResult> DepositUpdateCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="UniqueIdentifier")] System.Nullable<System.Guid> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateTime", DbType="DateTime")] System.Nullable<System.DateTime> dateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Amount", DbType="Decimal(10,2)")] System.Nullable<decimal> amount, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankFollowUpCode", DbType="NVarChar(500)")] string bankFollowUpCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AdminPermission", DbType="Bit")] System.Nullable<bool> adminPermission, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AdminNationalCode", DbType="NChar(10)")] string adminNationalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PersonNationalCode", DbType="NChar(10)")] string personNationalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Successful", DbType="Bit")] System.Nullable<bool> successful, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_Id", DbType="UniqueIdentifier")] System.Nullable<System.Guid> original_Id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, dateTime, amount, bankFollowUpCode, adminPermission, adminNationalCode, personNationalCode, successful, original_Id);
			return ((ISingleResult<DepositUpdateCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InstallementsDeleteCommand")]
		public int InstallementsDeleteCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_Id", DbType="UniqueIdentifier")] System.Nullable<System.Guid> original_Id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), original_Id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InstallementsInsertCommand")]
		public ISingleResult<InstallementsInsertCommandResult> InstallementsInsertCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="UniqueIdentifier")] System.Nullable<System.Guid> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PaymentDate", DbType="Date")] System.Nullable<System.DateTime> paymentDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Amount", DbType="Decimal(10,2)")] System.Nullable<decimal> amount, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LoanTransactionId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> loanTransactionId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, paymentDate, amount, loanTransactionId);
			return ((ISingleResult<InstallementsInsertCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InstallementsSelectCommand")]
		public ISingleResult<InstallementsSelectCommandResult> InstallementsSelectCommand()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<InstallementsSelectCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InstallementsUpdateCommand")]
		public ISingleResult<InstallementsUpdateCommandResult> InstallementsUpdateCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="UniqueIdentifier")] System.Nullable<System.Guid> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PaymentDate", DbType="Date")] System.Nullable<System.DateTime> paymentDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Amount", DbType="Decimal(10,2)")] System.Nullable<decimal> amount, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LoanTransactionId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> loanTransactionId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_Id", DbType="UniqueIdentifier")] System.Nullable<System.Guid> original_Id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, paymentDate, amount, loanTransactionId, original_Id);
			return ((ISingleResult<InstallementsUpdateCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.LoanDeleteCommand")]
		public int LoanDeleteCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_Id", DbType="UniqueIdentifier")] System.Nullable<System.Guid> original_Id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), original_Id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.LoanInsertCommand")]
		public ISingleResult<LoanInsertCommandResult> LoanInsertCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="UniqueIdentifier")] System.Nullable<System.Guid> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateTime", DbType="DateTime")] System.Nullable<System.DateTime> dateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Amount", DbType="Decimal(10,2)")] System.Nullable<decimal> amount, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankFollowUpCode", DbType="NVarChar(500)")] string bankFollowUpCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AdminPermission", DbType="Bit")] System.Nullable<bool> adminPermission, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AdminNationalCode", DbType="NChar(10)")] string adminNationalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PersonNationalCode", DbType="NChar(10)")] string personNationalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Successful", DbType="Bit")] System.Nullable<bool> successful, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ForContribution", DbType="Bit")] System.Nullable<bool> forContribution)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, dateTime, amount, bankFollowUpCode, adminPermission, adminNationalCode, personNationalCode, successful, forContribution);
			return ((ISingleResult<LoanInsertCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.LoanSelectCommand")]
		public ISingleResult<LoanSelectCommandResult> LoanSelectCommand()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<LoanSelectCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.LoanUpdateCommand")]
		public ISingleResult<LoanUpdateCommandResult> LoanUpdateCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="UniqueIdentifier")] System.Nullable<System.Guid> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateTime", DbType="DateTime")] System.Nullable<System.DateTime> dateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Amount", DbType="Decimal(10,2)")] System.Nullable<decimal> amount, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankFollowUpCode", DbType="NVarChar(500)")] string bankFollowUpCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AdminPermission", DbType="Bit")] System.Nullable<bool> adminPermission, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AdminNationalCode", DbType="NChar(10)")] string adminNationalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PersonNationalCode", DbType="NChar(10)")] string personNationalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Successful", DbType="Bit")] System.Nullable<bool> successful, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_Id", DbType="UniqueIdentifier")] System.Nullable<System.Guid> original_Id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, dateTime, amount, bankFollowUpCode, adminPermission, adminNationalCode, personNationalCode, successful, original_Id);
			return ((ISingleResult<LoanUpdateCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.LogSet_Insert")]
		public int LogSet_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="NVarChar(4000)")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NationalCode", DbType="NChar(10)")] string nationalCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), description, nationalCode);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.LogSet_Select")]
		public ISingleResult<LogSet_SelectResult> LogSet_Select()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<LogSet_SelectResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PeopleDeleteCommand")]
		public int PeopleDeleteCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_NationalCode", DbType="NChar(10)")] string original_NationalCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), original_NationalCode);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PeopleInsertCommand")]
		public ISingleResult<PeopleInsertCommandResult> PeopleInsertCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="NationalCode", DbType="NChar(10)")] string nationalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FirstName", DbType="NVarChar(80)")] string firstName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastName", DbType="NVarChar(80)")] string lastName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FathersName", DbType="NVarChar(80)")] string fathersName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Tel", DbType="NVarChar(50)")] string tel, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Mobile", DbType="NChar(11)")] string mobile, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BirthCity", DbType="NVarChar(50)")] string birthCity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PostalCode", DbType="NChar(10)")] string postalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Picture", DbType="NVarChar(4000)")] string picture, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Role", DbType="NChar(10)")] string role, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreateDateTime", DbType="DateTime")] System.Nullable<System.DateTime> createDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Password", DbType="NVarChar(4000)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Contribution", DbType="Decimal(10,5)")] System.Nullable<decimal> contribution)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nationalCode, firstName, lastName, fathersName, tel, mobile, birthCity, postalCode, picture, role, createDateTime, password, contribution);
			return ((ISingleResult<PeopleInsertCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PeopleSelectCommand")]
		public ISingleResult<PeopleSelectCommandResult> PeopleSelectCommand()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<PeopleSelectCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PeopleUpdateCommand")]
		public ISingleResult<PeopleUpdateCommandResult> PeopleUpdateCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="NationalCode", DbType="NChar(10)")] string nationalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FirstName", DbType="NVarChar(80)")] string firstName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastName", DbType="NVarChar(80)")] string lastName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FathersName", DbType="NVarChar(80)")] string fathersName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Tel", DbType="NVarChar(50)")] string tel, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Mobile", DbType="NChar(11)")] string mobile, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BirthCity", DbType="NVarChar(50)")] string birthCity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PostalCode", DbType="NChar(10)")] string postalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Picture", DbType="NVarChar(4000)")] string picture, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Contribution", DbType="Decimal(10,5)")] System.Nullable<decimal> contribution, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Password", DbType="NVarChar(4000)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_NationalCode", DbType="NChar(10)")] string original_NationalCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nationalCode, firstName, lastName, fathersName, tel, mobile, birthCity, postalCode, picture, contribution, password, original_NationalCode);
			return ((ISingleResult<PeopleUpdateCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Update1_ChangePass")]
		public ISingleResult<Update1_ChangePassResult> Update1_ChangePass([global::System.Data.Linq.Mapping.ParameterAttribute(Name="NationalCode", DbType="NChar(10)")] string nationalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Password", DbType="NVarChar(4000)")] string password)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nationalCode, password);
			return ((ISingleResult<Update1_ChangePassResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Update1_IsActive")]
		public ISingleResult<Update1_IsActiveResult> Update1_IsActive([global::System.Data.Linq.Mapping.ParameterAttribute(Name="NationalCode", DbType="NChar(10)")] string nationalCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nationalCode);
			return ((ISingleResult<Update1_IsActiveResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Update1_PayInstallement")]
		public int Update1_PayInstallement([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="UniqueIdentifier")] System.Nullable<System.Guid> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsPayed", DbType="Bit")] System.Nullable<bool> isPayed)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, isPayed);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Update1_SetDepositPermission")]
		public int Update1_SetDepositPermission([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="UniqueIdentifier")] System.Nullable<System.Guid> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Permission", DbType="Bit")] System.Nullable<bool> permission, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AdminNationalCode", DbType="NChar(10)")] string adminNationalCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, permission, adminNationalCode);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Update1_SetLoanPermission")]
		public int Update1_SetLoanPermission([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="UniqueIdentifier")] System.Nullable<System.Guid> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Permission", DbType="Bit")] System.Nullable<bool> permission, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AdminNationalCode", DbType="NChar(10)")] string adminNationalCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, permission, adminNationalCode);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cheque")]
	public partial class Cheque : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private decimal _Amount;
		
		private string _PayTo;
		
		private string _AdminNationalCode;
		
		private System.DateTime _IssuanceDateTime;
		
		private int _ConsecutiveNumber;
		
		private string _Description;
		
		private EntityRef<People> _People;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnPayToChanging(string value);
    partial void OnPayToChanged();
    partial void OnAdminNationalCodeChanging(string value);
    partial void OnAdminNationalCodeChanged();
    partial void OnIssuanceDateTimeChanging(System.DateTime value);
    partial void OnIssuanceDateTimeChanged();
    partial void OnConsecutiveNumberChanging(int value);
    partial void OnConsecutiveNumberChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Cheque()
		{
			this._People = default(EntityRef<People>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(10,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayTo", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string PayTo
		{
			get
			{
				return this._PayTo;
			}
			set
			{
				if ((this._PayTo != value))
				{
					this.OnPayToChanging(value);
					this.SendPropertyChanging();
					this._PayTo = value;
					this.SendPropertyChanged("PayTo");
					this.OnPayToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminNationalCode", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string AdminNationalCode
		{
			get
			{
				return this._AdminNationalCode;
			}
			set
			{
				if ((this._AdminNationalCode != value))
				{
					if (this._People.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdminNationalCodeChanging(value);
					this.SendPropertyChanging();
					this._AdminNationalCode = value;
					this.SendPropertyChanged("AdminNationalCode");
					this.OnAdminNationalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssuanceDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime IssuanceDateTime
		{
			get
			{
				return this._IssuanceDateTime;
			}
			set
			{
				if ((this._IssuanceDateTime != value))
				{
					this.OnIssuanceDateTimeChanging(value);
					this.SendPropertyChanging();
					this._IssuanceDateTime = value;
					this.SendPropertyChanged("IssuanceDateTime");
					this.OnIssuanceDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsecutiveNumber", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ConsecutiveNumber
		{
			get
			{
				return this._ConsecutiveNumber;
			}
			set
			{
				if ((this._ConsecutiveNumber != value))
				{
					this.OnConsecutiveNumberChanging(value);
					this.SendPropertyChanging();
					this._ConsecutiveNumber = value;
					this.SendPropertyChanged("ConsecutiveNumber");
					this.OnConsecutiveNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="People_Cheque", Storage="_People", ThisKey="AdminNationalCode", OtherKey="NationalCode", IsForeignKey=true)]
		public People People
		{
			get
			{
				return this._People.Entity;
			}
			set
			{
				People previousValue = this._People.Entity;
				if (((previousValue != value) 
							|| (this._People.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._People.Entity = null;
						previousValue.Cheques.Remove(this);
					}
					this._People.Entity = value;
					if ((value != null))
					{
						value.Cheques.Add(this);
						this._AdminNationalCode = value.NationalCode;
					}
					else
					{
						this._AdminNationalCode = default(string);
					}
					this.SendPropertyChanged("People");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DepositTransactions")]
	public partial class DepositTransaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.DateTime _DateTime;
		
		private decimal _Amount;
		
		private string _BankFollowUpCode;
		
		private bool _AdminPermission;
		
		private string _AdminNationalCode;
		
		private string _PersonNationalCode;
		
		private bool _Successful;
		
		private EntityRef<People> _People;
		
		private EntityRef<People> _People1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnDateTimeChanging(System.DateTime value);
    partial void OnDateTimeChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnBankFollowUpCodeChanging(string value);
    partial void OnBankFollowUpCodeChanged();
    partial void OnAdminPermissionChanging(bool value);
    partial void OnAdminPermissionChanged();
    partial void OnAdminNationalCodeChanging(string value);
    partial void OnAdminNationalCodeChanged();
    partial void OnPersonNationalCodeChanging(string value);
    partial void OnPersonNationalCodeChanged();
    partial void OnSuccessfulChanging(bool value);
    partial void OnSuccessfulChanged();
    #endregion
		
		public DepositTransaction()
		{
			this._People = default(EntityRef<People>);
			this._People1 = default(EntityRef<People>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL")]
		public System.DateTime DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this.OnDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DateTime = value;
					this.SendPropertyChanged("DateTime");
					this.OnDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(10,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankFollowUpCode", DbType="NVarChar(500)")]
		public string BankFollowUpCode
		{
			get
			{
				return this._BankFollowUpCode;
			}
			set
			{
				if ((this._BankFollowUpCode != value))
				{
					this.OnBankFollowUpCodeChanging(value);
					this.SendPropertyChanging();
					this._BankFollowUpCode = value;
					this.SendPropertyChanged("BankFollowUpCode");
					this.OnBankFollowUpCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminPermission", DbType="Bit NOT NULL")]
		public bool AdminPermission
		{
			get
			{
				return this._AdminPermission;
			}
			set
			{
				if ((this._AdminPermission != value))
				{
					this.OnAdminPermissionChanging(value);
					this.SendPropertyChanging();
					this._AdminPermission = value;
					this.SendPropertyChanged("AdminPermission");
					this.OnAdminPermissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminNationalCode", DbType="NChar(10)")]
		public string AdminNationalCode
		{
			get
			{
				return this._AdminNationalCode;
			}
			set
			{
				if ((this._AdminNationalCode != value))
				{
					if (this._People.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdminNationalCodeChanging(value);
					this.SendPropertyChanging();
					this._AdminNationalCode = value;
					this.SendPropertyChanged("AdminNationalCode");
					this.OnAdminNationalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonNationalCode", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string PersonNationalCode
		{
			get
			{
				return this._PersonNationalCode;
			}
			set
			{
				if ((this._PersonNationalCode != value))
				{
					if (this._People1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonNationalCodeChanging(value);
					this.SendPropertyChanging();
					this._PersonNationalCode = value;
					this.SendPropertyChanged("PersonNationalCode");
					this.OnPersonNationalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Successful", DbType="Bit NOT NULL")]
		public bool Successful
		{
			get
			{
				return this._Successful;
			}
			set
			{
				if ((this._Successful != value))
				{
					this.OnSuccessfulChanging(value);
					this.SendPropertyChanging();
					this._Successful = value;
					this.SendPropertyChanged("Successful");
					this.OnSuccessfulChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="People_DepositTransaction", Storage="_People", ThisKey="AdminNationalCode", OtherKey="NationalCode", IsForeignKey=true)]
		public People People
		{
			get
			{
				return this._People.Entity;
			}
			set
			{
				People previousValue = this._People.Entity;
				if (((previousValue != value) 
							|| (this._People.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._People.Entity = null;
						previousValue.DepositTransactions.Remove(this);
					}
					this._People.Entity = value;
					if ((value != null))
					{
						value.DepositTransactions.Add(this);
						this._AdminNationalCode = value.NationalCode;
					}
					else
					{
						this._AdminNationalCode = default(string);
					}
					this.SendPropertyChanged("People");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="People_DepositTransaction1", Storage="_People1", ThisKey="PersonNationalCode", OtherKey="NationalCode", IsForeignKey=true)]
		public People People1
		{
			get
			{
				return this._People1.Entity;
			}
			set
			{
				People previousValue = this._People1.Entity;
				if (((previousValue != value) 
							|| (this._People1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._People1.Entity = null;
						previousValue.DepositTransactions1.Remove(this);
					}
					this._People1.Entity = value;
					if ((value != null))
					{
						value.DepositTransactions1.Add(this);
						this._PersonNationalCode = value.NationalCode;
					}
					else
					{
						this._PersonNationalCode = default(string);
					}
					this.SendPropertyChanged("People1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Installements")]
	public partial class Installement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Nullable<System.DateTime> _PaymentDate;
		
		private decimal _Amount;
		
		private System.Guid _LoanTransactionId;
		
		private bool _IsPayed;
		
		private EntityRef<LoanTransaction> _LoanTransaction;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnPaymentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPaymentDateChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnLoanTransactionIdChanging(System.Guid value);
    partial void OnLoanTransactionIdChanged();
    partial void OnIsPayedChanging(bool value);
    partial void OnIsPayedChanged();
    #endregion
		
		public Installement()
		{
			this._LoanTransaction = default(EntityRef<LoanTransaction>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDate", DbType="Date")]
		public System.Nullable<System.DateTime> PaymentDate
		{
			get
			{
				return this._PaymentDate;
			}
			set
			{
				if ((this._PaymentDate != value))
				{
					this.OnPaymentDateChanging(value);
					this.SendPropertyChanging();
					this._PaymentDate = value;
					this.SendPropertyChanged("PaymentDate");
					this.OnPaymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(10,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanTransactionId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid LoanTransactionId
		{
			get
			{
				return this._LoanTransactionId;
			}
			set
			{
				if ((this._LoanTransactionId != value))
				{
					if (this._LoanTransaction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoanTransactionIdChanging(value);
					this.SendPropertyChanging();
					this._LoanTransactionId = value;
					this.SendPropertyChanged("LoanTransactionId");
					this.OnLoanTransactionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPayed", DbType="Bit NOT NULL")]
		public bool IsPayed
		{
			get
			{
				return this._IsPayed;
			}
			set
			{
				if ((this._IsPayed != value))
				{
					this.OnIsPayedChanging(value);
					this.SendPropertyChanging();
					this._IsPayed = value;
					this.SendPropertyChanged("IsPayed");
					this.OnIsPayedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoanTransaction_Installement", Storage="_LoanTransaction", ThisKey="LoanTransactionId", OtherKey="Id", IsForeignKey=true)]
		public LoanTransaction LoanTransaction
		{
			get
			{
				return this._LoanTransaction.Entity;
			}
			set
			{
				LoanTransaction previousValue = this._LoanTransaction.Entity;
				if (((previousValue != value) 
							|| (this._LoanTransaction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoanTransaction.Entity = null;
						previousValue.Installements.Remove(this);
					}
					this._LoanTransaction.Entity = value;
					if ((value != null))
					{
						value.Installements.Add(this);
						this._LoanTransactionId = value.Id;
					}
					else
					{
						this._LoanTransactionId = default(System.Guid);
					}
					this.SendPropertyChanged("LoanTransaction");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoanTransactions")]
	public partial class LoanTransaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.DateTime _DateTime;
		
		private decimal _Amount;
		
		private string _BankFollowUpCode;
		
		private bool _AdminPermission;
		
		private string _AdminNationalCode;
		
		private string _PersonNationalCode;
		
		private bool _Successful;
		
		private System.Nullable<bool> _ForContribution;
		
		private EntitySet<Installement> _Installements;
		
		private EntityRef<People> _People;
		
		private EntityRef<People> _People1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnDateTimeChanging(System.DateTime value);
    partial void OnDateTimeChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnBankFollowUpCodeChanging(string value);
    partial void OnBankFollowUpCodeChanged();
    partial void OnAdminPermissionChanging(bool value);
    partial void OnAdminPermissionChanged();
    partial void OnAdminNationalCodeChanging(string value);
    partial void OnAdminNationalCodeChanged();
    partial void OnPersonNationalCodeChanging(string value);
    partial void OnPersonNationalCodeChanged();
    partial void OnSuccessfulChanging(bool value);
    partial void OnSuccessfulChanged();
    partial void OnForContributionChanging(System.Nullable<bool> value);
    partial void OnForContributionChanged();
    #endregion
		
		public LoanTransaction()
		{
			this._Installements = new EntitySet<Installement>(new Action<Installement>(this.attach_Installements), new Action<Installement>(this.detach_Installements));
			this._People = default(EntityRef<People>);
			this._People1 = default(EntityRef<People>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL")]
		public System.DateTime DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this.OnDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DateTime = value;
					this.SendPropertyChanged("DateTime");
					this.OnDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(10,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankFollowUpCode", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string BankFollowUpCode
		{
			get
			{
				return this._BankFollowUpCode;
			}
			set
			{
				if ((this._BankFollowUpCode != value))
				{
					this.OnBankFollowUpCodeChanging(value);
					this.SendPropertyChanging();
					this._BankFollowUpCode = value;
					this.SendPropertyChanged("BankFollowUpCode");
					this.OnBankFollowUpCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminPermission", DbType="Bit NOT NULL")]
		public bool AdminPermission
		{
			get
			{
				return this._AdminPermission;
			}
			set
			{
				if ((this._AdminPermission != value))
				{
					this.OnAdminPermissionChanging(value);
					this.SendPropertyChanging();
					this._AdminPermission = value;
					this.SendPropertyChanged("AdminPermission");
					this.OnAdminPermissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminNationalCode", DbType="NChar(10)")]
		public string AdminNationalCode
		{
			get
			{
				return this._AdminNationalCode;
			}
			set
			{
				if ((this._AdminNationalCode != value))
				{
					if (this._People.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdminNationalCodeChanging(value);
					this.SendPropertyChanging();
					this._AdminNationalCode = value;
					this.SendPropertyChanged("AdminNationalCode");
					this.OnAdminNationalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonNationalCode", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string PersonNationalCode
		{
			get
			{
				return this._PersonNationalCode;
			}
			set
			{
				if ((this._PersonNationalCode != value))
				{
					if (this._People1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonNationalCodeChanging(value);
					this.SendPropertyChanging();
					this._PersonNationalCode = value;
					this.SendPropertyChanged("PersonNationalCode");
					this.OnPersonNationalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Successful", DbType="Bit NOT NULL")]
		public bool Successful
		{
			get
			{
				return this._Successful;
			}
			set
			{
				if ((this._Successful != value))
				{
					this.OnSuccessfulChanging(value);
					this.SendPropertyChanging();
					this._Successful = value;
					this.SendPropertyChanged("Successful");
					this.OnSuccessfulChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForContribution", DbType="Bit")]
		public System.Nullable<bool> ForContribution
		{
			get
			{
				return this._ForContribution;
			}
			set
			{
				if ((this._ForContribution != value))
				{
					this.OnForContributionChanging(value);
					this.SendPropertyChanging();
					this._ForContribution = value;
					this.SendPropertyChanged("ForContribution");
					this.OnForContributionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoanTransaction_Installement", Storage="_Installements", ThisKey="Id", OtherKey="LoanTransactionId")]
		public EntitySet<Installement> Installements
		{
			get
			{
				return this._Installements;
			}
			set
			{
				this._Installements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="People_LoanTransaction", Storage="_People", ThisKey="AdminNationalCode", OtherKey="NationalCode", IsForeignKey=true)]
		public People People
		{
			get
			{
				return this._People.Entity;
			}
			set
			{
				People previousValue = this._People.Entity;
				if (((previousValue != value) 
							|| (this._People.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._People.Entity = null;
						previousValue.LoanTransactions.Remove(this);
					}
					this._People.Entity = value;
					if ((value != null))
					{
						value.LoanTransactions.Add(this);
						this._AdminNationalCode = value.NationalCode;
					}
					else
					{
						this._AdminNationalCode = default(string);
					}
					this.SendPropertyChanged("People");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="People_LoanTransaction1", Storage="_People1", ThisKey="PersonNationalCode", OtherKey="NationalCode", IsForeignKey=true)]
		public People People1
		{
			get
			{
				return this._People1.Entity;
			}
			set
			{
				People previousValue = this._People1.Entity;
				if (((previousValue != value) 
							|| (this._People1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._People1.Entity = null;
						previousValue.LoanTransactions1.Remove(this);
					}
					this._People1.Entity = value;
					if ((value != null))
					{
						value.LoanTransactions1.Add(this);
						this._PersonNationalCode = value.NationalCode;
					}
					else
					{
						this._PersonNationalCode = default(string);
					}
					this.SendPropertyChanged("People1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Installements(Installement entity)
		{
			this.SendPropertyChanging();
			entity.LoanTransaction = this;
		}
		
		private void detach_Installements(Installement entity)
		{
			this.SendPropertyChanging();
			entity.LoanTransaction = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LogSet")]
	public partial class LogSet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.DateTime _EventDateTime;
		
		private string _Description;
		
		private string _NationalCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnEventDateTimeChanging(System.DateTime value);
    partial void OnEventDateTimeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnNationalCodeChanging(string value);
    partial void OnNationalCodeChanged();
    #endregion
		
		public LogSet()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDateTime", DbType="DateTime2 NOT NULL")]
		public System.DateTime EventDateTime
		{
			get
			{
				return this._EventDateTime;
			}
			set
			{
				if ((this._EventDateTime != value))
				{
					this.OnEventDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EventDateTime = value;
					this.SendPropertyChanged("EventDateTime");
					this.OnEventDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NChar(10)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this.OnNationalCodeChanging(value);
					this.SendPropertyChanging();
					this._NationalCode = value;
					this.SendPropertyChanged("NationalCode");
					this.OnNationalCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.People")]
	public partial class People : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _NationalCode;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _FathersName;
		
		private string _Tel;
		
		private string _Mobile;
		
		private string _BirthCity;
		
		private string _PostalCode;
		
		private string _Picture;
		
		private string _Role;
		
		private System.DateTime _CreateDateTime;
		
		private string _Password;
		
		private bool _IsActive;
		
		private string _Address;
		
		private System.Nullable<System.DateTime> _BirthDate;
		
		private System.Nullable<decimal> _Contribution;
		
		private EntitySet<Cheque> _Cheques;
		
		private EntitySet<DepositTransaction> _DepositTransactions;
		
		private EntitySet<DepositTransaction> _DepositTransactions1;
		
		private EntitySet<LoanTransaction> _LoanTransactions;
		
		private EntitySet<LoanTransaction> _LoanTransactions1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNationalCodeChanging(string value);
    partial void OnNationalCodeChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFathersNameChanging(string value);
    partial void OnFathersNameChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnBirthCityChanging(string value);
    partial void OnBirthCityChanged();
    partial void OnPostalCodeChanging(string value);
    partial void OnPostalCodeChanged();
    partial void OnPictureChanging(string value);
    partial void OnPictureChanged();
    partial void OnRoleChanging(string value);
    partial void OnRoleChanged();
    partial void OnCreateDateTimeChanging(System.DateTime value);
    partial void OnCreateDateTimeChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnBirthDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthDateChanged();
    partial void OnContributionChanging(System.Nullable<decimal> value);
    partial void OnContributionChanged();
    #endregion
		
		public People()
		{
			this._Cheques = new EntitySet<Cheque>(new Action<Cheque>(this.attach_Cheques), new Action<Cheque>(this.detach_Cheques));
			this._DepositTransactions = new EntitySet<DepositTransaction>(new Action<DepositTransaction>(this.attach_DepositTransactions), new Action<DepositTransaction>(this.detach_DepositTransactions));
			this._DepositTransactions1 = new EntitySet<DepositTransaction>(new Action<DepositTransaction>(this.attach_DepositTransactions1), new Action<DepositTransaction>(this.detach_DepositTransactions1));
			this._LoanTransactions = new EntitySet<LoanTransaction>(new Action<LoanTransaction>(this.attach_LoanTransactions), new Action<LoanTransaction>(this.detach_LoanTransactions));
			this._LoanTransactions1 = new EntitySet<LoanTransaction>(new Action<LoanTransaction>(this.attach_LoanTransactions1), new Action<LoanTransaction>(this.detach_LoanTransactions1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this.OnNationalCodeChanging(value);
					this.SendPropertyChanging();
					this._NationalCode = value;
					this.SendPropertyChanged("NationalCode");
					this.OnNationalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(80)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FathersName", DbType="NVarChar(80)")]
		public string FathersName
		{
			get
			{
				return this._FathersName;
			}
			set
			{
				if ((this._FathersName != value))
				{
					this.OnFathersNameChanging(value);
					this.SendPropertyChanging();
					this._FathersName = value;
					this.SendPropertyChanged("FathersName");
					this.OnFathersNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="NVarChar(50)")]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NChar(11) NOT NULL", CanBeNull=false)]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthCity", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string BirthCity
		{
			get
			{
				return this._BirthCity;
			}
			set
			{
				if ((this._BirthCity != value))
				{
					this.OnBirthCityChanging(value);
					this.SendPropertyChanging();
					this._BirthCity = value;
					this.SendPropertyChanged("BirthCity");
					this.OnBirthCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NChar(10)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this.OnPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalCode = value;
					this.SendPropertyChanged("PostalCode");
					this.OnPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="NVarChar(4000)")]
		public string Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this.OnRoleChanging(value);
					this.SendPropertyChanging();
					this._Role = value;
					this.SendPropertyChanged("Role");
					this.OnRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDateTime
		{
			get
			{
				return this._CreateDateTime;
			}
			set
			{
				if ((this._CreateDateTime != value))
				{
					this.OnCreateDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateDateTime = value;
					this.SendPropertyChanged("CreateDateTime");
					this.OnCreateDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="Date")]
		public System.Nullable<System.DateTime> BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contribution", DbType="Decimal(10,5)")]
		public System.Nullable<decimal> Contribution
		{
			get
			{
				return this._Contribution;
			}
			set
			{
				if ((this._Contribution != value))
				{
					this.OnContributionChanging(value);
					this.SendPropertyChanging();
					this._Contribution = value;
					this.SendPropertyChanged("Contribution");
					this.OnContributionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="People_Cheque", Storage="_Cheques", ThisKey="NationalCode", OtherKey="AdminNationalCode")]
		public EntitySet<Cheque> Cheques
		{
			get
			{
				return this._Cheques;
			}
			set
			{
				this._Cheques.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="People_DepositTransaction", Storage="_DepositTransactions", ThisKey="NationalCode", OtherKey="AdminNationalCode")]
		public EntitySet<DepositTransaction> DepositTransactions
		{
			get
			{
				return this._DepositTransactions;
			}
			set
			{
				this._DepositTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="People_DepositTransaction1", Storage="_DepositTransactions1", ThisKey="NationalCode", OtherKey="PersonNationalCode")]
		public EntitySet<DepositTransaction> DepositTransactions1
		{
			get
			{
				return this._DepositTransactions1;
			}
			set
			{
				this._DepositTransactions1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="People_LoanTransaction", Storage="_LoanTransactions", ThisKey="NationalCode", OtherKey="AdminNationalCode")]
		public EntitySet<LoanTransaction> LoanTransactions
		{
			get
			{
				return this._LoanTransactions;
			}
			set
			{
				this._LoanTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="People_LoanTransaction1", Storage="_LoanTransactions1", ThisKey="NationalCode", OtherKey="PersonNationalCode")]
		public EntitySet<LoanTransaction> LoanTransactions1
		{
			get
			{
				return this._LoanTransactions1;
			}
			set
			{
				this._LoanTransactions1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cheques(Cheque entity)
		{
			this.SendPropertyChanging();
			entity.People = this;
		}
		
		private void detach_Cheques(Cheque entity)
		{
			this.SendPropertyChanging();
			entity.People = null;
		}
		
		private void attach_DepositTransactions(DepositTransaction entity)
		{
			this.SendPropertyChanging();
			entity.People = this;
		}
		
		private void detach_DepositTransactions(DepositTransaction entity)
		{
			this.SendPropertyChanging();
			entity.People = null;
		}
		
		private void attach_DepositTransactions1(DepositTransaction entity)
		{
			this.SendPropertyChanging();
			entity.People1 = this;
		}
		
		private void detach_DepositTransactions1(DepositTransaction entity)
		{
			this.SendPropertyChanging();
			entity.People1 = null;
		}
		
		private void attach_LoanTransactions(LoanTransaction entity)
		{
			this.SendPropertyChanging();
			entity.People = this;
		}
		
		private void detach_LoanTransactions(LoanTransaction entity)
		{
			this.SendPropertyChanging();
			entity.People = null;
		}
		
		private void attach_LoanTransactions1(LoanTransaction entity)
		{
			this.SendPropertyChanging();
			entity.People1 = this;
		}
		
		private void detach_LoanTransactions1(LoanTransaction entity)
		{
			this.SendPropertyChanging();
			entity.People1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Update1_PeopleDeposits")]
	public partial class View_Update1_PeopleDeposit
	{
		
		private string _NationalCode;
		
		private string _Fullname;
		
		private System.Guid _DepositId;
		
		private decimal _Amount;
		
		private string _AdminNationalCode;
		
		private bool _Successful;
		
		private string _BankFollowUpCode;
		
		private System.DateTime _DateTime;
		
		private bool _AdminPermission;
		
		public View_Update1_PeopleDeposit()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fullname", DbType="NVarChar(161)")]
		public string Fullname
		{
			get
			{
				return this._Fullname;
			}
			set
			{
				if ((this._Fullname != value))
				{
					this._Fullname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepositId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DepositId
		{
			get
			{
				return this._DepositId;
			}
			set
			{
				if ((this._DepositId != value))
				{
					this._DepositId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(10,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminNationalCode", DbType="NChar(10)")]
		public string AdminNationalCode
		{
			get
			{
				return this._AdminNationalCode;
			}
			set
			{
				if ((this._AdminNationalCode != value))
				{
					this._AdminNationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Successful", DbType="Bit NOT NULL")]
		public bool Successful
		{
			get
			{
				return this._Successful;
			}
			set
			{
				if ((this._Successful != value))
				{
					this._Successful = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankFollowUpCode", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string BankFollowUpCode
		{
			get
			{
				return this._BankFollowUpCode;
			}
			set
			{
				if ((this._BankFollowUpCode != value))
				{
					this._BankFollowUpCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL")]
		public System.DateTime DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this._DateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminPermission", DbType="Bit NOT NULL")]
		public bool AdminPermission
		{
			get
			{
				return this._AdminPermission;
			}
			set
			{
				if ((this._AdminPermission != value))
				{
					this._AdminPermission = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Update1_PeopleLoans")]
	public partial class View_Update1_PeopleLoan
	{
		
		private string _NationalCode;
		
		private string _Fullname;
		
		private System.Guid _LoanId;
		
		private decimal _Amount;
		
		private string _AdminNationalCode;
		
		private bool _Successful;
		
		private string _BankFollowUpCode;
		
		private System.DateTime _DateTime;
		
		private bool _AdminPermission;
		
		public View_Update1_PeopleLoan()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fullname", DbType="NVarChar(161)")]
		public string Fullname
		{
			get
			{
				return this._Fullname;
			}
			set
			{
				if ((this._Fullname != value))
				{
					this._Fullname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid LoanId
		{
			get
			{
				return this._LoanId;
			}
			set
			{
				if ((this._LoanId != value))
				{
					this._LoanId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(10,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminNationalCode", DbType="NChar(10)")]
		public string AdminNationalCode
		{
			get
			{
				return this._AdminNationalCode;
			}
			set
			{
				if ((this._AdminNationalCode != value))
				{
					this._AdminNationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Successful", DbType="Bit NOT NULL")]
		public bool Successful
		{
			get
			{
				return this._Successful;
			}
			set
			{
				if ((this._Successful != value))
				{
					this._Successful = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankFollowUpCode", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string BankFollowUpCode
		{
			get
			{
				return this._BankFollowUpCode;
			}
			set
			{
				if ((this._BankFollowUpCode != value))
				{
					this._BankFollowUpCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL")]
		public System.DateTime DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this._DateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminPermission", DbType="Bit NOT NULL")]
		public bool AdminPermission
		{
			get
			{
				return this._AdminPermission;
			}
			set
			{
				if ((this._AdminPermission != value))
				{
					this._AdminPermission = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Update1_PersonActive")]
	public partial class View_Update1_PersonActive
	{
		
		private string _NationalCode;
		
		private bool _IsActive;
		
		public View_Update1_PersonActive()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Update1_PersonInstallements")]
	public partial class View_Update1_PersonInstallement
	{
		
		private string _NationalCode;
		
		private string _Fullname;
		
		private System.Guid _LoanId;
		
		private System.Guid _InstallementId;
		
		private System.Nullable<System.DateTime> _PaymentDate;
		
		private decimal _Amount;
		
		private bool _InstallementIsPayed;
		
		public View_Update1_PersonInstallement()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fullname", DbType="NVarChar(161)")]
		public string Fullname
		{
			get
			{
				return this._Fullname;
			}
			set
			{
				if ((this._Fullname != value))
				{
					this._Fullname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid LoanId
		{
			get
			{
				return this._LoanId;
			}
			set
			{
				if ((this._LoanId != value))
				{
					this._LoanId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallementId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid InstallementId
		{
			get
			{
				return this._InstallementId;
			}
			set
			{
				if ((this._InstallementId != value))
				{
					this._InstallementId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDate", DbType="Date")]
		public System.Nullable<System.DateTime> PaymentDate
		{
			get
			{
				return this._PaymentDate;
			}
			set
			{
				if ((this._PaymentDate != value))
				{
					this._PaymentDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(10,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallementIsPayed", DbType="Bit NOT NULL")]
		public bool InstallementIsPayed
		{
			get
			{
				return this._InstallementIsPayed;
			}
			set
			{
				if ((this._InstallementIsPayed != value))
				{
					this._InstallementIsPayed = value;
				}
			}
		}
	}
	
	public partial class ChequeInsertCommandResult
	{
		
		private System.Guid _Id;
		
		private decimal _Amount;
		
		private string _PayTo;
		
		private string _AdminNationalCode;
		
		private System.DateTime _IssuanceDateTime;
		
		private int _ConsecutiveNumber;
		
		public ChequeInsertCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(10,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayTo", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string PayTo
		{
			get
			{
				return this._PayTo;
			}
			set
			{
				if ((this._PayTo != value))
				{
					this._PayTo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminNationalCode", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string AdminNationalCode
		{
			get
			{
				return this._AdminNationalCode;
			}
			set
			{
				if ((this._AdminNationalCode != value))
				{
					this._AdminNationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssuanceDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime IssuanceDateTime
		{
			get
			{
				return this._IssuanceDateTime;
			}
			set
			{
				if ((this._IssuanceDateTime != value))
				{
					this._IssuanceDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsecutiveNumber", DbType="Int NOT NULL")]
		public int ConsecutiveNumber
		{
			get
			{
				return this._ConsecutiveNumber;
			}
			set
			{
				if ((this._ConsecutiveNumber != value))
				{
					this._ConsecutiveNumber = value;
				}
			}
		}
	}
	
	public partial class ChequeUpdateCommandResult
	{
		
		private System.Guid _Id;
		
		private decimal _Amount;
		
		private string _PayTo;
		
		private string _AdminNationalCode;
		
		private System.DateTime _IssuanceDateTime;
		
		private int _ConsecutiveNumber;
		
		private string _Description;
		
		public ChequeUpdateCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(10,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayTo", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string PayTo
		{
			get
			{
				return this._PayTo;
			}
			set
			{
				if ((this._PayTo != value))
				{
					this._PayTo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminNationalCode", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string AdminNationalCode
		{
			get
			{
				return this._AdminNationalCode;
			}
			set
			{
				if ((this._AdminNationalCode != value))
				{
					this._AdminNationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssuanceDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime IssuanceDateTime
		{
			get
			{
				return this._IssuanceDateTime;
			}
			set
			{
				if ((this._IssuanceDateTime != value))
				{
					this._IssuanceDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsecutiveNumber", DbType="Int NOT NULL")]
		public int ConsecutiveNumber
		{
			get
			{
				return this._ConsecutiveNumber;
			}
			set
			{
				if ((this._ConsecutiveNumber != value))
				{
					this._ConsecutiveNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
	}
	
	public partial class DepositInsertCommandResult
	{
		
		private System.Guid _Id;
		
		private System.DateTime _DateTime;
		
		private decimal _Amount;
		
		private string _BankFollowUpCode;
		
		private bool _AdminPermission;
		
		private string _AdminNationalCode;
		
		private string _PersonNationalCode;
		
		private bool _Successful;
		
		public DepositInsertCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL")]
		public System.DateTime DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this._DateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(10,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankFollowUpCode", DbType="NVarChar(500)")]
		public string BankFollowUpCode
		{
			get
			{
				return this._BankFollowUpCode;
			}
			set
			{
				if ((this._BankFollowUpCode != value))
				{
					this._BankFollowUpCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminPermission", DbType="Bit NOT NULL")]
		public bool AdminPermission
		{
			get
			{
				return this._AdminPermission;
			}
			set
			{
				if ((this._AdminPermission != value))
				{
					this._AdminPermission = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminNationalCode", DbType="NChar(10)")]
		public string AdminNationalCode
		{
			get
			{
				return this._AdminNationalCode;
			}
			set
			{
				if ((this._AdminNationalCode != value))
				{
					this._AdminNationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonNationalCode", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string PersonNationalCode
		{
			get
			{
				return this._PersonNationalCode;
			}
			set
			{
				if ((this._PersonNationalCode != value))
				{
					this._PersonNationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Successful", DbType="Bit NOT NULL")]
		public bool Successful
		{
			get
			{
				return this._Successful;
			}
			set
			{
				if ((this._Successful != value))
				{
					this._Successful = value;
				}
			}
		}
	}
	
	public partial class DepositSelectCommandResult
	{
		
		private System.Guid _Id;
		
		private System.DateTime _DateTime;
		
		private decimal _Amount;
		
		private string _BankFollowUpCode;
		
		private bool _AdminPermission;
		
		private string _AdminNationalCode;
		
		private string _PersonNationalCode;
		
		private bool _Successful;
		
		public DepositSelectCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL")]
		public System.DateTime DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this._DateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(10,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankFollowUpCode", DbType="NVarChar(500)")]
		public string BankFollowUpCode
		{
			get
			{
				return this._BankFollowUpCode;
			}
			set
			{
				if ((this._BankFollowUpCode != value))
				{
					this._BankFollowUpCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminPermission", DbType="Bit NOT NULL")]
		public bool AdminPermission
		{
			get
			{
				return this._AdminPermission;
			}
			set
			{
				if ((this._AdminPermission != value))
				{
					this._AdminPermission = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminNationalCode", DbType="NChar(10)")]
		public string AdminNationalCode
		{
			get
			{
				return this._AdminNationalCode;
			}
			set
			{
				if ((this._AdminNationalCode != value))
				{
					this._AdminNationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonNationalCode", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string PersonNationalCode
		{
			get
			{
				return this._PersonNationalCode;
			}
			set
			{
				if ((this._PersonNationalCode != value))
				{
					this._PersonNationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Successful", DbType="Bit NOT NULL")]
		public bool Successful
		{
			get
			{
				return this._Successful;
			}
			set
			{
				if ((this._Successful != value))
				{
					this._Successful = value;
				}
			}
		}
	}
	
	public partial class DepositUpdateCommandResult
	{
		
		private System.Guid _Id;
		
		private System.DateTime _DateTime;
		
		private decimal _Amount;
		
		private string _BankFollowUpCode;
		
		private bool _AdminPermission;
		
		private string _AdminNationalCode;
		
		private string _PersonNationalCode;
		
		private bool _Successful;
		
		public DepositUpdateCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL")]
		public System.DateTime DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this._DateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(10,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankFollowUpCode", DbType="NVarChar(500)")]
		public string BankFollowUpCode
		{
			get
			{
				return this._BankFollowUpCode;
			}
			set
			{
				if ((this._BankFollowUpCode != value))
				{
					this._BankFollowUpCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminPermission", DbType="Bit NOT NULL")]
		public bool AdminPermission
		{
			get
			{
				return this._AdminPermission;
			}
			set
			{
				if ((this._AdminPermission != value))
				{
					this._AdminPermission = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminNationalCode", DbType="NChar(10)")]
		public string AdminNationalCode
		{
			get
			{
				return this._AdminNationalCode;
			}
			set
			{
				if ((this._AdminNationalCode != value))
				{
					this._AdminNationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonNationalCode", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string PersonNationalCode
		{
			get
			{
				return this._PersonNationalCode;
			}
			set
			{
				if ((this._PersonNationalCode != value))
				{
					this._PersonNationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Successful", DbType="Bit NOT NULL")]
		public bool Successful
		{
			get
			{
				return this._Successful;
			}
			set
			{
				if ((this._Successful != value))
				{
					this._Successful = value;
				}
			}
		}
	}
	
	public partial class InstallementsInsertCommandResult
	{
		
		private System.Guid _Id;
		
		private System.Nullable<System.DateTime> _PaymentDate;
		
		private decimal _Amount;
		
		private System.Guid _LoanTransactionId;
		
		private bool _IsPayed;
		
		public InstallementsInsertCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDate", DbType="Date")]
		public System.Nullable<System.DateTime> PaymentDate
		{
			get
			{
				return this._PaymentDate;
			}
			set
			{
				if ((this._PaymentDate != value))
				{
					this._PaymentDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(10,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanTransactionId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid LoanTransactionId
		{
			get
			{
				return this._LoanTransactionId;
			}
			set
			{
				if ((this._LoanTransactionId != value))
				{
					this._LoanTransactionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPayed", DbType="Bit NOT NULL")]
		public bool IsPayed
		{
			get
			{
				return this._IsPayed;
			}
			set
			{
				if ((this._IsPayed != value))
				{
					this._IsPayed = value;
				}
			}
		}
	}
	
	public partial class InstallementsSelectCommandResult
	{
		
		private System.Guid _Id;
		
		private System.Nullable<System.DateTime> _PaymentDate;
		
		private decimal _Amount;
		
		private System.Guid _LoanTransactionId;
		
		private bool _IsPayed;
		
		public InstallementsSelectCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDate", DbType="Date")]
		public System.Nullable<System.DateTime> PaymentDate
		{
			get
			{
				return this._PaymentDate;
			}
			set
			{
				if ((this._PaymentDate != value))
				{
					this._PaymentDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(10,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanTransactionId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid LoanTransactionId
		{
			get
			{
				return this._LoanTransactionId;
			}
			set
			{
				if ((this._LoanTransactionId != value))
				{
					this._LoanTransactionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPayed", DbType="Bit NOT NULL")]
		public bool IsPayed
		{
			get
			{
				return this._IsPayed;
			}
			set
			{
				if ((this._IsPayed != value))
				{
					this._IsPayed = value;
				}
			}
		}
	}
	
	public partial class InstallementsUpdateCommandResult
	{
		
		private System.Guid _Id;
		
		private System.Nullable<System.DateTime> _PaymentDate;
		
		private decimal _Amount;
		
		private System.Guid _LoanTransactionId;
		
		private bool _IsPayed;
		
		public InstallementsUpdateCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDate", DbType="Date")]
		public System.Nullable<System.DateTime> PaymentDate
		{
			get
			{
				return this._PaymentDate;
			}
			set
			{
				if ((this._PaymentDate != value))
				{
					this._PaymentDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(10,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanTransactionId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid LoanTransactionId
		{
			get
			{
				return this._LoanTransactionId;
			}
			set
			{
				if ((this._LoanTransactionId != value))
				{
					this._LoanTransactionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPayed", DbType="Bit NOT NULL")]
		public bool IsPayed
		{
			get
			{
				return this._IsPayed;
			}
			set
			{
				if ((this._IsPayed != value))
				{
					this._IsPayed = value;
				}
			}
		}
	}
	
	public partial class LoanInsertCommandResult
	{
		
		private System.Guid _Id;
		
		private System.DateTime _DateTime;
		
		private decimal _Amount;
		
		private string _BankFollowUpCode;
		
		private bool _AdminPermission;
		
		private string _AdminNationalCode;
		
		private string _PersonNationalCode;
		
		private bool _Successful;
		
		public LoanInsertCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL")]
		public System.DateTime DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this._DateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(10,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankFollowUpCode", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string BankFollowUpCode
		{
			get
			{
				return this._BankFollowUpCode;
			}
			set
			{
				if ((this._BankFollowUpCode != value))
				{
					this._BankFollowUpCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminPermission", DbType="Bit NOT NULL")]
		public bool AdminPermission
		{
			get
			{
				return this._AdminPermission;
			}
			set
			{
				if ((this._AdminPermission != value))
				{
					this._AdminPermission = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminNationalCode", DbType="NChar(10)")]
		public string AdminNationalCode
		{
			get
			{
				return this._AdminNationalCode;
			}
			set
			{
				if ((this._AdminNationalCode != value))
				{
					this._AdminNationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonNationalCode", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string PersonNationalCode
		{
			get
			{
				return this._PersonNationalCode;
			}
			set
			{
				if ((this._PersonNationalCode != value))
				{
					this._PersonNationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Successful", DbType="Bit NOT NULL")]
		public bool Successful
		{
			get
			{
				return this._Successful;
			}
			set
			{
				if ((this._Successful != value))
				{
					this._Successful = value;
				}
			}
		}
	}
	
	public partial class LoanSelectCommandResult
	{
		
		private System.Guid _Id;
		
		private System.DateTime _DateTime;
		
		private decimal _Amount;
		
		private string _BankFollowUpCode;
		
		private bool _AdminPermission;
		
		private string _AdminNationalCode;
		
		private string _PersonNationalCode;
		
		private bool _Successful;
		
		private System.Nullable<bool> _ForContribution;
		
		public LoanSelectCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL")]
		public System.DateTime DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this._DateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(10,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankFollowUpCode", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string BankFollowUpCode
		{
			get
			{
				return this._BankFollowUpCode;
			}
			set
			{
				if ((this._BankFollowUpCode != value))
				{
					this._BankFollowUpCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminPermission", DbType="Bit NOT NULL")]
		public bool AdminPermission
		{
			get
			{
				return this._AdminPermission;
			}
			set
			{
				if ((this._AdminPermission != value))
				{
					this._AdminPermission = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminNationalCode", DbType="NChar(10)")]
		public string AdminNationalCode
		{
			get
			{
				return this._AdminNationalCode;
			}
			set
			{
				if ((this._AdminNationalCode != value))
				{
					this._AdminNationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonNationalCode", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string PersonNationalCode
		{
			get
			{
				return this._PersonNationalCode;
			}
			set
			{
				if ((this._PersonNationalCode != value))
				{
					this._PersonNationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Successful", DbType="Bit NOT NULL")]
		public bool Successful
		{
			get
			{
				return this._Successful;
			}
			set
			{
				if ((this._Successful != value))
				{
					this._Successful = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForContribution", DbType="Bit")]
		public System.Nullable<bool> ForContribution
		{
			get
			{
				return this._ForContribution;
			}
			set
			{
				if ((this._ForContribution != value))
				{
					this._ForContribution = value;
				}
			}
		}
	}
	
	public partial class LoanUpdateCommandResult
	{
		
		private System.Guid _Id;
		
		private System.DateTime _DateTime;
		
		private decimal _Amount;
		
		private string _BankFollowUpCode;
		
		private bool _AdminPermission;
		
		private string _AdminNationalCode;
		
		private string _PersonNationalCode;
		
		private bool _Successful;
		
		public LoanUpdateCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL")]
		public System.DateTime DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this._DateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(10,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankFollowUpCode", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string BankFollowUpCode
		{
			get
			{
				return this._BankFollowUpCode;
			}
			set
			{
				if ((this._BankFollowUpCode != value))
				{
					this._BankFollowUpCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminPermission", DbType="Bit NOT NULL")]
		public bool AdminPermission
		{
			get
			{
				return this._AdminPermission;
			}
			set
			{
				if ((this._AdminPermission != value))
				{
					this._AdminPermission = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminNationalCode", DbType="NChar(10)")]
		public string AdminNationalCode
		{
			get
			{
				return this._AdminNationalCode;
			}
			set
			{
				if ((this._AdminNationalCode != value))
				{
					this._AdminNationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonNationalCode", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string PersonNationalCode
		{
			get
			{
				return this._PersonNationalCode;
			}
			set
			{
				if ((this._PersonNationalCode != value))
				{
					this._PersonNationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Successful", DbType="Bit NOT NULL")]
		public bool Successful
		{
			get
			{
				return this._Successful;
			}
			set
			{
				if ((this._Successful != value))
				{
					this._Successful = value;
				}
			}
		}
	}
	
	public partial class LogSet_SelectResult
	{
		
		private long _Id;
		
		private System.DateTime _EventDateTime;
		
		private string _Description;
		
		private string _NationalCode;
		
		public LogSet_SelectResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDateTime", DbType="DateTime2 NOT NULL")]
		public System.DateTime EventDateTime
		{
			get
			{
				return this._EventDateTime;
			}
			set
			{
				if ((this._EventDateTime != value))
				{
					this._EventDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NChar(10)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
	}
	
	public partial class PeopleInsertCommandResult
	{
		
		private string _NationalCode;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _FathersName;
		
		private string _Tel;
		
		private string _Mobile;
		
		private string _BirthCity;
		
		private string _PostalCode;
		
		private string _Picture;
		
		private string _Role;
		
		private System.DateTime _CreateDateTime;
		
		private string _Password;
		
		public PeopleInsertCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(80)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FathersName", DbType="NVarChar(80)")]
		public string FathersName
		{
			get
			{
				return this._FathersName;
			}
			set
			{
				if ((this._FathersName != value))
				{
					this._FathersName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="NVarChar(50)")]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this._Tel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NChar(11) NOT NULL", CanBeNull=false)]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this._Mobile = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthCity", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string BirthCity
		{
			get
			{
				return this._BirthCity;
			}
			set
			{
				if ((this._BirthCity != value))
				{
					this._BirthCity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NChar(10)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this._PostalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="NVarChar(4000)")]
		public string Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this._Picture = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this._Role = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDateTime
		{
			get
			{
				return this._CreateDateTime;
			}
			set
			{
				if ((this._CreateDateTime != value))
				{
					this._CreateDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
	}
	
	public partial class PeopleSelectCommandResult
	{
		
		private string _NationalCode;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _FathersName;
		
		private string _Tel;
		
		private string _Mobile;
		
		private string _BirthCity;
		
		private string _PostalCode;
		
		private string _Picture;
		
		private string _Role;
		
		private System.DateTime _CreateDateTime;
		
		private string _Password;
		
		private bool _IsActive;
		
		private string _Address;
		
		private System.Nullable<System.DateTime> _BirthDate;
		
		private System.Nullable<decimal> _Contribution;
		
		public PeopleSelectCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(80)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FathersName", DbType="NVarChar(80)")]
		public string FathersName
		{
			get
			{
				return this._FathersName;
			}
			set
			{
				if ((this._FathersName != value))
				{
					this._FathersName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="NVarChar(50)")]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this._Tel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NChar(11) NOT NULL", CanBeNull=false)]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this._Mobile = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthCity", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string BirthCity
		{
			get
			{
				return this._BirthCity;
			}
			set
			{
				if ((this._BirthCity != value))
				{
					this._BirthCity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NChar(10)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this._PostalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="NVarChar(4000)")]
		public string Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this._Picture = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this._Role = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDateTime
		{
			get
			{
				return this._CreateDateTime;
			}
			set
			{
				if ((this._CreateDateTime != value))
				{
					this._CreateDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="Date")]
		public System.Nullable<System.DateTime> BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this._BirthDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contribution", DbType="Decimal(10,5)")]
		public System.Nullable<decimal> Contribution
		{
			get
			{
				return this._Contribution;
			}
			set
			{
				if ((this._Contribution != value))
				{
					this._Contribution = value;
				}
			}
		}
	}
	
	public partial class PeopleUpdateCommandResult
	{
		
		private string _NationalCode;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _FathersName;
		
		private string _Tel;
		
		private string _Mobile;
		
		private string _BirthCity;
		
		private string _PostalCode;
		
		private string _Picture;
		
		private string _Role;
		
		private System.DateTime _CreateDateTime;
		
		private string _Password;
		
		private bool _IsActive;
		
		private string _Address;
		
		private System.Nullable<System.DateTime> _BirthDate;
		
		private System.Nullable<decimal> _Contribution;
		
		public PeopleUpdateCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(80)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FathersName", DbType="NVarChar(80)")]
		public string FathersName
		{
			get
			{
				return this._FathersName;
			}
			set
			{
				if ((this._FathersName != value))
				{
					this._FathersName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="NVarChar(50)")]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this._Tel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NChar(11) NOT NULL", CanBeNull=false)]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this._Mobile = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthCity", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string BirthCity
		{
			get
			{
				return this._BirthCity;
			}
			set
			{
				if ((this._BirthCity != value))
				{
					this._BirthCity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NChar(10)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this._PostalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="NVarChar(4000)")]
		public string Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this._Picture = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this._Role = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDateTime
		{
			get
			{
				return this._CreateDateTime;
			}
			set
			{
				if ((this._CreateDateTime != value))
				{
					this._CreateDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="Date")]
		public System.Nullable<System.DateTime> BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this._BirthDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contribution", DbType="Decimal(10,5)")]
		public System.Nullable<decimal> Contribution
		{
			get
			{
				return this._Contribution;
			}
			set
			{
				if ((this._Contribution != value))
				{
					this._Contribution = value;
				}
			}
		}
	}
	
	public partial class Update1_ChangePassResult
	{
		
		private string _NationalCode;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _FathersName;
		
		private string _Tel;
		
		private string _Mobile;
		
		private string _BirthCity;
		
		private string _PostalCode;
		
		private string _Picture;
		
		private string _Role;
		
		private System.DateTime _CreateDateTime;
		
		private string _Password;
		
		private bool _IsActive;
		
		private string _Address;
		
		private System.Nullable<System.DateTime> _BirthDate;
		
		private System.Nullable<decimal> _Contribution;
		
		public Update1_ChangePassResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(80)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FathersName", DbType="NVarChar(80)")]
		public string FathersName
		{
			get
			{
				return this._FathersName;
			}
			set
			{
				if ((this._FathersName != value))
				{
					this._FathersName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="NVarChar(50)")]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this._Tel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NChar(11) NOT NULL", CanBeNull=false)]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this._Mobile = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthCity", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string BirthCity
		{
			get
			{
				return this._BirthCity;
			}
			set
			{
				if ((this._BirthCity != value))
				{
					this._BirthCity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NChar(10)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this._PostalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="NVarChar(4000)")]
		public string Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this._Picture = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this._Role = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDateTime
		{
			get
			{
				return this._CreateDateTime;
			}
			set
			{
				if ((this._CreateDateTime != value))
				{
					this._CreateDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="Date")]
		public System.Nullable<System.DateTime> BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this._BirthDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contribution", DbType="Decimal(10,5)")]
		public System.Nullable<decimal> Contribution
		{
			get
			{
				return this._Contribution;
			}
			set
			{
				if ((this._Contribution != value))
				{
					this._Contribution = value;
				}
			}
		}
	}
	
	public partial class Update1_IsActiveResult
	{
		
		private bool _IsActive;
		
		public Update1_IsActiveResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
