//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KhajeNasirAccountingSystemWindowsFormClient.LoanTransactionsService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LoanTransactionsService.ILoanTransactionsService")]
    public interface ILoanTransactionsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoanTransactionsService/SetLoanPermission", ReplyAction="http://tempuri.org/ILoanTransactionsService/SetLoanPermissionResponse")]
        void SetLoanPermission(System.Guid LoanId, bool Permission, string AdminNationalCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoanTransactionsService/SetLoanPermission", ReplyAction="http://tempuri.org/ILoanTransactionsService/SetLoanPermissionResponse")]
        System.Threading.Tasks.Task SetLoanPermissionAsync(System.Guid LoanId, bool Permission, string AdminNationalCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoanTransactionsService/ContributionLoan", ReplyAction="http://tempuri.org/ILoanTransactionsService/ContributionLoanResponse")]
        void ContributionLoan(string adminNationalCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoanTransactionsService/ContributionLoan", ReplyAction="http://tempuri.org/ILoanTransactionsService/ContributionLoanResponse")]
        System.Threading.Tasks.Task ContributionLoanAsync(string adminNationalCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoanTransactionsService/UnPermittedLoanTransactions", ReplyAction="http://tempuri.org/ILoanTransactionsService/UnPermittedLoanTransactionsResponse")]
        KhajeNasirAccountingSystemReportClient.LoanTransactionsService.LoanSelectCommandResult[] UnPermittedLoanTransactions(string NationalCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoanTransactionsService/UnPermittedLoanTransactions", ReplyAction="http://tempuri.org/ILoanTransactionsService/UnPermittedLoanTransactionsResponse")]
        System.Threading.Tasks.Task<KhajeNasirAccountingSystemReportClient.LoanTransactionsService.LoanSelectCommandResult[]> UnPermittedLoanTransactionsAsync(string NationalCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoanTransactionsService/PermittedLoanTransactions", ReplyAction="http://tempuri.org/ILoanTransactionsService/PermittedLoanTransactionsResponse")]
        KhajeNasirAccountingSystemReportClient.LoanTransactionsService.LoanSelectCommandResult[] PermittedLoanTransactions(string NationalCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoanTransactionsService/PermittedLoanTransactions", ReplyAction="http://tempuri.org/ILoanTransactionsService/PermittedLoanTransactionsResponse")]
        System.Threading.Tasks.Task<KhajeNasirAccountingSystemReportClient.LoanTransactionsService.LoanSelectCommandResult[]> PermittedLoanTransactionsAsync(string NationalCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoanTransactionsService/GetLoanTransactions", ReplyAction="http://tempuri.org/ILoanTransactionsService/GetLoanTransactionsResponse")]
        KhajeNasirAccountingSystemReportClient.LoanTransactionsService.LoanSelectCommandResult[] GetLoanTransactions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoanTransactionsService/GetLoanTransactions", ReplyAction="http://tempuri.org/ILoanTransactionsService/GetLoanTransactionsResponse")]
        System.Threading.Tasks.Task<KhajeNasirAccountingSystemReportClient.LoanTransactionsService.LoanSelectCommandResult[]> GetLoanTransactionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoanTransactionsService/GetPeopleLoanTransactions", ReplyAction="http://tempuri.org/ILoanTransactionsService/GetPeopleLoanTransactionsResponse")]
        KhajeNasirAccountingSystemReportClient.LoanTransactionsService.View_Update1_PeopleLoan[] GetPeopleLoanTransactions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoanTransactionsService/GetPeopleLoanTransactions", ReplyAction="http://tempuri.org/ILoanTransactionsService/GetPeopleLoanTransactionsResponse")]
        System.Threading.Tasks.Task<KhajeNasirAccountingSystemReportClient.LoanTransactionsService.View_Update1_PeopleLoan[]> GetPeopleLoanTransactionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoanTransactionsService/InsertLoanTransactions", ReplyAction="http://tempuri.org/ILoanTransactionsService/InsertLoanTransactionsResponse")]
        void InsertLoanTransactions(System.Guid Id, System.DateTime DateTime, decimal Amount, string BankFollowUpCode, bool AdminPermission, string AdminNationalCode, string PersonNationalCode, bool Successful, bool ForContribution);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoanTransactionsService/InsertLoanTransactions", ReplyAction="http://tempuri.org/ILoanTransactionsService/InsertLoanTransactionsResponse")]
        System.Threading.Tasks.Task InsertLoanTransactionsAsync(System.Guid Id, System.DateTime DateTime, decimal Amount, string BankFollowUpCode, bool AdminPermission, string AdminNationalCode, string PersonNationalCode, bool Successful, bool ForContribution);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoanTransactionsService/UpdateLoanTransactions", ReplyAction="http://tempuri.org/ILoanTransactionsService/UpdateLoanTransactionsResponse")]
        void UpdateLoanTransactions(System.Guid Id, System.DateTime DateTime, decimal Amount, string BankFollowUpCode, bool AdminPermission, string AdminNationalCode, string PersonNationalCode, bool Successful);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoanTransactionsService/UpdateLoanTransactions", ReplyAction="http://tempuri.org/ILoanTransactionsService/UpdateLoanTransactionsResponse")]
        System.Threading.Tasks.Task UpdateLoanTransactionsAsync(System.Guid Id, System.DateTime DateTime, decimal Amount, string BankFollowUpCode, bool AdminPermission, string AdminNationalCode, string PersonNationalCode, bool Successful);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoanTransactionsService/DeleteLoanTransactions", ReplyAction="http://tempuri.org/ILoanTransactionsService/DeleteLoanTransactionsResponse")]
        void DeleteLoanTransactions(System.Guid Original_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoanTransactionsService/DeleteLoanTransactions", ReplyAction="http://tempuri.org/ILoanTransactionsService/DeleteLoanTransactionsResponse")]
        System.Threading.Tasks.Task DeleteLoanTransactionsAsync(System.Guid Original_Id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILoanTransactionsServiceChannel : KhajeNasirAccountingSystemWindowsFormClient.LoanTransactionsService.ILoanTransactionsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoanTransactionsServiceClient : System.ServiceModel.ClientBase<KhajeNasirAccountingSystemWindowsFormClient.LoanTransactionsService.ILoanTransactionsService>, KhajeNasirAccountingSystemWindowsFormClient.LoanTransactionsService.ILoanTransactionsService {
        
        public LoanTransactionsServiceClient() {
        }
        
        public LoanTransactionsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LoanTransactionsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoanTransactionsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoanTransactionsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void SetLoanPermission(System.Guid LoanId, bool Permission, string AdminNationalCode) {
            base.Channel.SetLoanPermission(LoanId, Permission, AdminNationalCode);
        }
        
        public System.Threading.Tasks.Task SetLoanPermissionAsync(System.Guid LoanId, bool Permission, string AdminNationalCode) {
            return base.Channel.SetLoanPermissionAsync(LoanId, Permission, AdminNationalCode);
        }
        
        public void ContributionLoan(string adminNationalCode) {
            base.Channel.ContributionLoan(adminNationalCode);
        }
        
        public System.Threading.Tasks.Task ContributionLoanAsync(string adminNationalCode) {
            return base.Channel.ContributionLoanAsync(adminNationalCode);
        }
        
        public KhajeNasirAccountingSystemReportClient.LoanTransactionsService.LoanSelectCommandResult[] UnPermittedLoanTransactions(string NationalCode) {
            return base.Channel.UnPermittedLoanTransactions(NationalCode);
        }
        
        public System.Threading.Tasks.Task<KhajeNasirAccountingSystemReportClient.LoanTransactionsService.LoanSelectCommandResult[]> UnPermittedLoanTransactionsAsync(string NationalCode) {
            return base.Channel.UnPermittedLoanTransactionsAsync(NationalCode);
        }
        
        public KhajeNasirAccountingSystemReportClient.LoanTransactionsService.LoanSelectCommandResult[] PermittedLoanTransactions(string NationalCode) {
            return base.Channel.PermittedLoanTransactions(NationalCode);
        }
        
        public System.Threading.Tasks.Task<KhajeNasirAccountingSystemReportClient.LoanTransactionsService.LoanSelectCommandResult[]> PermittedLoanTransactionsAsync(string NationalCode) {
            return base.Channel.PermittedLoanTransactionsAsync(NationalCode);
        }
        
        public KhajeNasirAccountingSystemReportClient.LoanTransactionsService.LoanSelectCommandResult[] GetLoanTransactions() {
            return base.Channel.GetLoanTransactions();
        }
        
        public System.Threading.Tasks.Task<KhajeNasirAccountingSystemReportClient.LoanTransactionsService.LoanSelectCommandResult[]> GetLoanTransactionsAsync() {
            return base.Channel.GetLoanTransactionsAsync();
        }
        
        public KhajeNasirAccountingSystemReportClient.LoanTransactionsService.View_Update1_PeopleLoan[] GetPeopleLoanTransactions() {
            return base.Channel.GetPeopleLoanTransactions();
        }
        
        public System.Threading.Tasks.Task<KhajeNasirAccountingSystemReportClient.LoanTransactionsService.View_Update1_PeopleLoan[]> GetPeopleLoanTransactionsAsync() {
            return base.Channel.GetPeopleLoanTransactionsAsync();
        }
        
        public void InsertLoanTransactions(System.Guid Id, System.DateTime DateTime, decimal Amount, string BankFollowUpCode, bool AdminPermission, string AdminNationalCode, string PersonNationalCode, bool Successful, bool ForContribution) {
            base.Channel.InsertLoanTransactions(Id, DateTime, Amount, BankFollowUpCode, AdminPermission, AdminNationalCode, PersonNationalCode, Successful, ForContribution);
        }
        
        public System.Threading.Tasks.Task InsertLoanTransactionsAsync(System.Guid Id, System.DateTime DateTime, decimal Amount, string BankFollowUpCode, bool AdminPermission, string AdminNationalCode, string PersonNationalCode, bool Successful, bool ForContribution) {
            return base.Channel.InsertLoanTransactionsAsync(Id, DateTime, Amount, BankFollowUpCode, AdminPermission, AdminNationalCode, PersonNationalCode, Successful, ForContribution);
        }
        
        public void UpdateLoanTransactions(System.Guid Id, System.DateTime DateTime, decimal Amount, string BankFollowUpCode, bool AdminPermission, string AdminNationalCode, string PersonNationalCode, bool Successful) {
            base.Channel.UpdateLoanTransactions(Id, DateTime, Amount, BankFollowUpCode, AdminPermission, AdminNationalCode, PersonNationalCode, Successful);
        }
        
        public System.Threading.Tasks.Task UpdateLoanTransactionsAsync(System.Guid Id, System.DateTime DateTime, decimal Amount, string BankFollowUpCode, bool AdminPermission, string AdminNationalCode, string PersonNationalCode, bool Successful) {
            return base.Channel.UpdateLoanTransactionsAsync(Id, DateTime, Amount, BankFollowUpCode, AdminPermission, AdminNationalCode, PersonNationalCode, Successful);
        }
        
        public void DeleteLoanTransactions(System.Guid Original_Id) {
            base.Channel.DeleteLoanTransactions(Original_Id);
        }
        
        public System.Threading.Tasks.Task DeleteLoanTransactionsAsync(System.Guid Original_Id) {
            return base.Channel.DeleteLoanTransactionsAsync(Original_Id);
        }
    }
}
